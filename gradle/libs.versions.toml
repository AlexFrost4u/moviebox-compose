[versions]
# Kotlin
kotlin = "1.6.20"
coroutines = "1.6.1"
ksp = "1.6.20-1.0.5"
# Dependency Injection
koin = "3.1.6"
# Testing
kotest = "5.3.0"
# Gradle
android_gradle = "7.1.2"
# Compose
compose = "1.2.0-alpha08"
compose_compiler = "1.2.0-alpha08"
accompanist = "0.23.1"
compose_destinations = "1.5.1-beta"
# Gradle Version plugin
gradle_versions = "0.45.2"
# Static analyze code
ktlint = "0.45.2"
ktlint_jlleitschuh = "10.2.1"
detekt = "1.19.0"
spotless = "6.4.2"
arrow_analysis = "2.0"

[libraries]
# Gradle
gradle_build = { module = "com.android.tools.build:gradle", version.ref = "android_gradle" }
kotlin_gradle_plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
# Kotlin
kotlin_stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin_ext = { module = "org.jetbrains.kotlin:kotlin-android-extensions", version.ref = "kotlin" }
kotlin_reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinx_serialization_json = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"
coroutines_core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines_android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines_test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
# AndroidX
androidx_activity_compose = "androidx.activity:activity-compose:1.4.0"
androidx_core_ktx = "androidx.core:core-ktx:1.7.0"
androidx_appcompat = "androidx.appcompat:appcompat:1.4.1"
androidx_material = "com.google.android.material:material:1.6.0"
androidx_lifecycle_ktx = "androidx.lifecycle:lifecycle-runtime-ktx:2.4.1"
androidx_navigation_compose = "androidx.navigation:navigation-compose:2.5.0-alpha02"
androidx_datastore_preferences = "androidx.datastore:datastore-preferences:1.0.0"
# Compose
compose_compiler = { module = "androidx.compose.compiler:compiler", version.ref = "compose_compiler" }
compose_ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose_material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose_tooling_preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose_tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose_foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose_runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
# Loggers
kotlin_logging = "io.github.microutils:kotlin-logging-jvm:2.1.21"
slf4j = "org.slf4j:slf4j-simple:1.7.36"
# Network
retrofit = "com.squareup.retrofit2:retrofit:2.9.0"
serialization_converter = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"
okhttp_bom = "com.squareup.okhttp3:okhttp-bom:5.0.0-alpha.1"
okhttp_bom_core = { module = "com.squareup.okhttp3:okhttp" }
okhttp_bom_interceptor = { module = "com.squareup.okhttp3:logging-interceptor" }
# Dependency Injection
koin_core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin_android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin_compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin_test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
# Testing - assertation framework
kotest_assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest_junit = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
# Accompanist
accompanist_pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "accompanist" }
accompanist_pager_indicators = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "accompanist" }
accompanist_insets = { module = "com.google.accompanist:accompanist-insets", version.ref = "accompanist" }
accompanist_navigation_material = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }
accompanist_navigation_animation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }
accompanist_ui_controller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
# Other
sandwich = "com.github.skydoves:sandwich:1.2.3"
mvi_orbit = "org.orbit-mvi:orbit-viewmodel:4.3.2"
coil = "io.coil-kt:coil-compose:1.4.0"
klock = "com.soywiz.korlibs.klock:klock:2.7.0"
compose_destinations_core = { module = "io.github.raamcosta.compose-destinations:animations-core", version.ref = "compose_destinations" }
compose_destinations_ksp = { module = "io.github.raamcosta.compose-destinations:ksp", version.ref = "compose_destinations" }

[bundles]
androidx_ui = [
    "androidx_activity_compose",
    "androidx_core_ktx",
    "androidx_appcompat",
    "androidx_material",
    "androidx_lifecycle_ktx"
]
compose_ui = [
    "compose_ui",
    "compose_material",
    "compose_tooling_preview",
    "compose_tooling"
]
compose = [
    "compose_ui",
    "compose_material",
    "compose_tooling_preview",
    "compose_tooling",
    "compose_foundation",
    "compose_runtime"
]
network = ["retrofit", "serialization_converter", "okhttp_bom", "okhttp_bom_core", "okhttp_bom_interceptor"]
okhttp = ["okhttp_bom", "okhttp_bom_core", "okhttp_bom_interceptor"]
kotest = ["kotest_assertions", "kotest_junit"]
logging = ["slf4j", "kotlin_logging"]

[plugins]
jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin_serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint_jlleitschuh" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
gradle_versions = { id = "com.github.ben-manes.versions", version.ref = "gradle_versions" }
arrow_analysis = { id = "io.arrow-kt.analysis.kotlin:io.arrow-kt.analysis.kotlin.gradle.plugin", version.ref = "arrow_analysis" }
arrow_analysis_group = { id = "io.arrow-kt.analysis.kotlin", version.ref = "arrow_analysis" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }